{{- if .Values.global.kyvernoPolicyExceptions.enabled }}
apiVersion: kyverno.io/v2alpha1
kind: PolicyException
metadata:
  name: kube-vip-exceptions
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  exceptions:
  - policyName: disallow-capabilities
    ruleNames:
    - autogen-adding-capabilities
    - adding-capabilities
  - policyName: disallow-capabilities-strict
    ruleNames:
    - autogen-require-drop-all
    - require-drop-all
    - autogen-adding-capabilities-strict
    - adding-capabilities-strict
  - policyName: disallow-host-namespaces
    ruleNames:
    - autogen-host-namespaces
    - host-namespaces
  - policyName: disallow-privilege-escalation
    ruleNames:
    - autogen-privilege-escalation
    - privilege-escalation
  - policyName: require-run-as-nonroot
    ruleNames:
    - autogen-run-as-non-root
    - run-as-non-root
  - policyName: restrict-seccomp-strict
    ruleNames:
    - autogen-check-seccomp-strict
    - check-seccomp-strict
  - policyName: restrict-image-registries
    ruleNames:
    - autogen-validate-registries
    - validate-registries
  - policyName: restrict-volume-types
    ruleNames:
    - autogen-restricted-volumes
    - restricted-volumes
  match:
    any:
    - resources:
        kinds:
        - Pod
        # because kube-vip prefix is common also for kube-vip-cloud-provider, we need to distinguish bethween the two
        selector:
          matchLabels:
          {{- include "kube-vip.selectorLabels" . | nindent 10 }}
        namespaces:
        - {{ .Release.Namespace }}
        names:
        - kube-vip-*
    - resources:
        kinds:
        - DaemonSet
        namespaces:
        - {{ .Release.Namespace }}
        names:
        - kube-vip
{{- end }}